//@import "reset";

// Container widths
$grid-gutter-width: 30px !default;
$container-max-widths: (
        sm: 540px,
        md: 720px,
        lg: 960px,
        xl: 1200px
) !default;
$grid-breakpoints: (
        xs: 0,
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px
) !default;
@mixin make-container() {
    width: 100%;
    padding-right: ($grid-gutter-width / 2);
    padding-left: ($grid-gutter-width / 2);
    margin-right: auto;
    margin-left: auto;
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min != 0, $min, null);
}

// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
    @each $breakpoint, $container-max-width in $max-widths {
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            max-width: $container-max-width;
        }
    }
}

$enable-grid-classes: true !default;

//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
    .container {
        @include make-container();
        @include make-container-max-widths();
    }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.

@if $enable-grid-classes {
    .container-fluid {
        @include make-container();
    }
}

*, ::after, ::before {
    box-sizing: border-box;
}

//==============Style common===============//
* {
    margin: 0;
    padding: 0;
}

body {
    padding-top: 50px;
    background: #fff;
    color: $color_main;
    font-family: Roboto, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-size: 14px;
    font-weight: 400;
    line-height: 1.5;
    margin: 0;
}

.container {
    padding: 0 10px;
}

.container.container-mh {
    min-height: 90vh;
}

b, strong {
    font-weight: 600;
}
i {
    font-style: italic;
}

a {
    color: #484848;
    text-decoration: none;
}

ul li {
    list-style: none;
}

//html {scroll-behavior: smooth}
.no-scroll {
    overflow-y: hidden;
}

//.title {
//  color: #333;
//  font-size: 18px;
//  font-weight: 600;
//  margin-top: 20px;
//  text-align: center;
//  text-transform: uppercase;
//}
.text-center {
    text-align: center;
}

@media (max-width: 991px) {
    .container {
        padding: 0 15px;
    }
}

@media (min-width: 1440px) {
    .container-full {
        max-width: 1440px;
        margin-left: auto;
        margin-right: auto;
    }
}

@media (max-width: 1440px) {
    .container-full {
        width: 100%;
        padding-left: 15px;
        padding-right: 15px;
    }
}


body.not-scroll{
    overflow: hidden;
}

.callout {
    border-radius: 3px;
    padding: 15px 30px 15px 15px;
    border-left: 5px solid #eee;
    color: #fff;
    &-danger {
        color: #721c24;
        background-color: #f8d7da;
        border-color: #f5c6cb;
    }
}
.callout-info {
    border-color: #0f71c0;
    background-color: #2196f3;
}


.nav-pagination {
    margin-top: 10px;
    ul {
        li {
            display: inline-block;
            a,span {
                width: 30px;
                height: 30px;
                display: flex;
                font-size: 16px;
                justify-content: center;
                align-items: center;
            }
            &.active {
                background: #ef7733;
                color: white;
            }
        }
    }
}

.pay-success {
    background: #ffeeee;
    position: relative;
    .text {
        position: absolute;
        right: 20px;
        bottom: 10px;
        color: #fc0821!important;
        border: 1px solid;
        border-radius: 5px;
        padding: 0 5px;
    }
    .text-vote {
        position: absolute;
        right: 20px;
        bottom: 44px;
        color: #fc0821!important;
        border: 1px solid;
        border-radius: 5px;
        padding: 0 5px;
    }
}
.text-cancel-ticket {
    position: absolute;
    right: 20px;
    bottom: 44px;
    color: #5897fb!important;
    border: 1px solid;
    border-radius: 5px;
    padding: 0 5px;
}


/* Shared */
.loginBtn {
    box-sizing: border-box;
    position: relative;
    /* width: 13em;  - apply for fixed size */
    margin: 0.2em;
    padding: 0 15px 0 46px;
    border: none;
    text-align: left;
    line-height: 34px;
    white-space: nowrap;
    border-radius: 0 !important;
    font-size: 16px;
    color: #FFF;
    padding-left: 50px !important;
    width: 300px;
}
.loginBtn:before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 0;
    left: 0;
    width: 34px;
    height: 100%;
}
.loginBtn:focus {
    outline: none;
}
.loginBtn:active {
    box-shadow: inset 0 0 0 32px rgba(0,0,0,0.1);
}


/* Facebook */
.loginBtn--facebook {
    background-color: #4C69BA;
    background-image: linear-gradient(#4C69BA, #3B55A0);
    /*font-family: "Helvetica neue", Helvetica Neue, Helvetica, Arial, sans-serif;*/
    text-shadow: 0 -1px 0 #354C8C;
}
.loginBtn--facebook:before {
    border-right: #364e92 1px solid;
    background: url('/images/icon/icon_facebook.png') 6px 6px no-repeat;
}
.loginBtn--facebook:hover,
.loginBtn--facebook:focus {
    background-color: #5B7BD5;
    background-image: linear-gradient(#5B7BD5, #4864B1);
}


/* Google */
.loginBtn--google {
    /*font-family: "Roboto", Roboto, arial, sans-serif;*/
    background: #DD4B39;
}
.loginBtn--google:before {
    border-right: #BB3F30 1px solid;
    background: url('/images/icon/icon_google.png') 6px 6px no-repeat;
}
.loginBtn--google:hover,
.loginBtn--google:focus {
    background: #E74B37;
}